version: '3'
services:
#  redis:
#    container_name: redis
#    image: redis
#    hostname: redis
#    ports:
#        - "6379:6379"
#    volumes:
#        - ../data/redis:/data
#    entrypoint: redis-server --appendonly yes
#    restart: always
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
      image: "wurstmeister/kafka"
      ports:
       - "9092:9092"
      hostname: kafka
      links:
       - zookeeper
      environment:
       - KAFKA_ADVERTISED_HOST_NAME=kafka
       - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
       - KAFKA_ADVERTISED_PORT=9092
       - KAFKA_CREATE_TOPICS=Messages:1:3,Messages2:1:3
  redis:
      image: redis
      command: [ "redis-server", "--protected-mode", "no" ]
      ports:
        - "6379:6379"
  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/db:/data/db
    ports:
        - 27017:27017
    command: mongod --smallfiles --logpath=/dev/null # --quiet
  app:
    build: .
    ports:
           - "8080:8080"
    environment:
      - spring.data.mongodb.database=messagedb
      - spring.data.mongodb.host=mongodb
      - spring.data.mongodb.port=27017
      - spring.redis.host=redis
      - spring.redis.port=6379
    depends_on:
      - mongodb
      - redis
      - kafka
    links:
       - redis
       - mongodb
       - kafka

  persister:
      build: ./persister
      ports:
             - "8081:8081"
      environment:
        - spring.data.mongodb.database=messagedb
        - spring.data.mongodb.host=mongodb
        - spring.data.mongodb.port=27017
      depends_on:
        - mongodb
        - kafka
      links:
         - mongodb
         - kafka
